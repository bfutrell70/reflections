When would you want to use a remote repository rather than keeping all your work
local?

    It allows your repository to be shared between people or computers.  Also
    it allows you to retrieve your repository if something were to happen to
    your computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If you have made changes locally pulling changes may affect those changes.
    It's almost the inverse of pushing to the remote repository manually versus
    doing it automatically.  With sending to the remote repository you only
    want to send changes that you want to be public.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are copies of a repository. Any changes made to the fork are not
    made to the parent.  However with GitHub a fork will show the source of its
    parent.

    Cloning a repository makes a copy of it. Changes made to the clone are not
    made to the original.

    Branches are a way to do some experimental work or fix bugs off of a parent
    without affecting it.

    A fork would be used if you wanted to work off of an existing repository but
    not affect the original.  The fork would show the source of the original
    repository.

    A clone would be used if you wanted to copy an existing repository but not
    link back to it.

    A branch would be used on an existing repository to do work that you did
    not want to affect the branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
